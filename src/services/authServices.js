const bcrypt = require("bcryptjs");
const jwt = require("jsonwebtoken");
const Usuario = require("../database/models/Usuario");
require("dotenv").config();

const login = async (email, password) => {
  try {
    console.log("üîç Buscando usuario en la base de datos...");
    const user = await Usuario.findOne({ where: { email } });

    // Si el usuario no existe, devolver el mismo mensaje gen√©rico
    if (!user) {
      console.log("‚ùå Usuario no encontrado");
      throw new Error("Usuario o contrase√±a incorrectos");
    }

    // Comparar contrase√±as
    const isMatch = await bcrypt.compare(password, user.password);
    if (!isMatch) {
      console.log("‚ùå Contrase√±a incorrecta");
      throw new Error("Usuario o contrase√±a incorrectos");
    }

    console.log("‚úÖ Usuario autenticado con √©xito");

    // Generar token
    const token = jwt.sign({ id: user.id_usuario, email: user.email }, process.env.JWT_SECRET, {
      expiresIn: "1h",
    });

    return { message: "Login exitoso", token };
  } catch (error) {
    throw error; // Pasamos el error al controlador
  }
};


const signUp = async (email, password, dni, nombre, apellidos, telefono, fecha_nacimiento) => {
  try {
    console.log("üîç Buscando usuario en la base de datos...");

    // Verificar si el email ya est√° registrado
    const existingUser = await Usuario.findOne({ where: { email } });
    if (existingUser) {
      console.log("‚ùå El correo electr√≥nico ya est√° registrado");
      throw new Error("El correo electr√≥nico ya est√° registrado");
    }

    // Crear el nuevo usuario (la contrase√±a se hashea autom√°ticamente por el hook del modelo)
    const newUser = await Usuario.create({
      email,
      password,  // No es necesario hashear la contrase√±a, Sequelize lo hace autom√°ticamente
      dni,
      nombre,
      apellidos,
      telefono,
      fecha_nacimiento,
    });

    console.log("‚úÖ Usuario registrado con √©xito");
    return { message: "Registro exitoso", user: newUser }; // Retornar el usuario creado
  } catch (error) {
    throw error; // Pasamos el error al controlador
  }
};

module.exports = {
  login,
  signUp,
};
